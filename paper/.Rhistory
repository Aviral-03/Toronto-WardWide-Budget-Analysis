# get package
url <- "https://ckan0.cf.opendata.inter.prod-toronto.ca/dataset/6678e1a6-d25f-4dff-b2b7-aa8f042bc2eb/resource/16a31e1d-b4d9-4cf0-b5b3-2e3937cb4121/download/2023-WardProfiles-2011-2021-CensusData.xlsx"
# load the first datastore resource as a sample
local_file <- tempfile(fileext = ".xlsx")
download.file(url, local_file, mode = "wb")
raw_ward_data <- readxl::read_xlsx(local_file)
# Write CSV
write.csv(raw_ward_data, "../data/raw_data/raw_ward_data.csv")
# clean up
unlink(local_file)
raw_data_2 <- read_csv("../data/raw_data/raw_ward_data.csv")
# get package
url <- "https://ckan0.cf.opendata.inter.prod-toronto.ca/dataset/6678e1a6-d25f-4dff-b2b7-aa8f042bc2eb/resource/16a31e1d-b4d9-4cf0-b5b3-2e3937cb4121/download/2023-WardProfiles-2011-2021-CensusData.xlsx"
# load the first datastore resource as a sample
local_file <- tempfile(fileext = ".xlsx")
download.file(url, local_file, mode = "wb")
raw_ward_data <- readxl::read_xlsx(local_file)
# Write CSV
write.csv(raw_ward_data, "../data/raw_data/raw_ward_data.csv")
# clean up
unlink(local_file)
raw_data_2 <- read_csv("../data/raw_data/raw_ward_data.csv")
#| include: false
#| warning: false
#| message: false
library(tidyverse)
library(opendatatoronto)
library(readxl)
library(styler)
library(dplyr)
# get package
url <- "https://ckan0.cf.opendata.inter.prod-toronto.ca/dataset/6678e1a6-d25f-4dff-b2b7-aa8f042bc2eb/resource/16a31e1d-b4d9-4cf0-b5b3-2e3937cb4121/download/2023-WardProfiles-2011-2021-CensusData.xlsx"
# load the first datastore resource as a sample
local_file <- tempfile(fileext = ".xlsx")
download.file(url, local_file, mode = "wb")
raw_ward_data <- readxl::read_xlsx(local_file)
# Write CSV
write.csv(raw_ward_data, "../data/raw_data/raw_ward_data.csv")
# clean up
unlink(local_file)
raw_data_2 <- read_csv("../data/raw_data/raw_ward_data.csv")
# Only keep the relevant columns:
cleaned_ward_data <-
raw_data_2[c(18, 997, 1307, 1383), ]
cleaned_ward_data <- as.data.frame(t(cleaned_ward_data)) |>
slice(-1) |>
slice(-1) |>
rename(population = V1, income = V4)
# Remove the first row:
cleaned_ward_data <- cleaned_ward_data[-1, ]
# Add ward_id column:
cleaned_ward_data$ward_id = 1:25
# Set row name as ward_id
rownames(cleaned_ward_data) <- cleaned_ward_data$ward_id
ward_names <- c("Etobicoke North", "Etobicoke Centre", "Etobicoke-Lakeshore",
"Parkdale-High Park","York South-Weston", "York Centre",
"Humber River-Black Creek", "Eglinton-Lawrence",
"Davenport", "Spadina-Fort York", "University-Rosedale",
"Toronto-St. Paul's", "Toronto Centre", "Toronto-Danforth",
"Don Valley West", "Don Valley East", "Don Valley North",
"Willowdale", "Beaches-East York", "Scarborough Southwest",
"Scarborough Centre", "Scarborough-Agincourt",
"Scarborough North", "Scarborough-Guildwood",
"Scarborough-Rouge Park")
# Add ward name column:
cleaned_ward_data$ward = ward_names
# Calculate the percentage of uneducated people in each ward:
cleaned_ward_data <- cleaned_ward_data[c("ward_id", "ward", "population", "income")] |>
rename("average_household_income" = "income")
write.csv(cleaned_ward_data, "../data/analysis_data/cleaned_ward_data.csv")
# Write cleaned data as parquet
write_parquet(cleaned_ward_data, "../data/analysis_data/cleaned_ward_data.parquet")
#| include: false
#| warning: false
#| message: false
library(tidyverse)
library(opendatatoronto)
library(readxl)
library(styler)
library(dplyr)
library(arrow)
# Download the package
# install.packages("opendatatoronto")
# install.packages("styler")
install.packages("arrow")
#| include: false
#| warning: false
#| message: false
library(tidyverse)
library(opendatatoronto)
library(readxl)
library(styler)
library(dplyr)
library(arrow)
raw_data_2 <- read_csv("../data/raw_data/raw_ward_data.csv")
# Only keep the relevant columns:
cleaned_ward_data <-
raw_data_2[c(18, 997, 1307, 1383), ]
cleaned_ward_data <- as.data.frame(t(cleaned_ward_data)) |>
slice(-1) |>
slice(-1) |>
rename(population = V1, income = V4)
# Remove the first row:
cleaned_ward_data <- cleaned_ward_data[-1, ]
# Add ward_id column:
cleaned_ward_data$ward_id = 1:25
# Set row name as ward_id
rownames(cleaned_ward_data) <- cleaned_ward_data$ward_id
ward_names <- c("Etobicoke North", "Etobicoke Centre", "Etobicoke-Lakeshore",
"Parkdale-High Park","York South-Weston", "York Centre",
"Humber River-Black Creek", "Eglinton-Lawrence",
"Davenport", "Spadina-Fort York", "University-Rosedale",
"Toronto-St. Paul's", "Toronto Centre", "Toronto-Danforth",
"Don Valley West", "Don Valley East", "Don Valley North",
"Willowdale", "Beaches-East York", "Scarborough Southwest",
"Scarborough Centre", "Scarborough-Agincourt",
"Scarborough North", "Scarborough-Guildwood",
"Scarborough-Rouge Park")
# Add ward name column:
cleaned_ward_data$ward = ward_names
# Calculate the percentage of uneducated people in each ward:
cleaned_ward_data <- cleaned_ward_data[c("ward_id", "ward", "population", "income")] |>
rename("average_household_income" = "income")
write.csv(cleaned_ward_data, "../data/analysis_data/cleaned_ward_data.csv")
# Write cleaned data as parquet
write_parquet(cleaned_ward_data, "../data/analysis_data/cleaned_ward_data.parquet")
# Captial Budgets in Toronto
url <- "https://ckan0.cf.opendata.inter.prod-toronto.ca/dataset/7d3bcf2f-8eca-4ed5-a352-a34adb130931/resource/50f76ab0-3ed3-41b4-8350-49c2c52911f9/download/2023-2032-capital-budget-and-plan-details.xlsx"
# load the first datastore resource as a sample
local_file <- tempfile(fileext = ".xlsx")
download.file(url, local_file, mode = "wb")
raw_capital_data <- readxl::read_xlsx(local_file)
# Write CSV
write.csv(raw_capital_data, "../data/raw_data/raw_capital_data.csv")
raw_capital_data_2 <- read_csv("../data/raw_data/raw_capital_data.csv")
# Only keep the relevant columns with name Total 10 Year, Ward Number, Ward, Category
cleaned_capital_data <- raw_capital_data_2[c(15, 16, 17, 18)] |>
rename("ward_id" = "Ward Number") |>
rename("ward" = "Ward") |>
rename("category" = "Category") |>
rename("total_10_year" = "Total 10 Year")
# Filter out the rows in ward_id that are CW
cleaned_capital_data <- cleaned_capital_data %>%
filter(ward_id != "CW")
# Combine the rows with the same ward_id and category and sum the total_10_year keep the ward_name
cleaned_capital_data <- cleaned_capital_data |>
group_by(ward_id, ward, category) |>
summarise(total_10_year = sum(total_10_year)) |>
# change ward_id to numeric
mutate(ward_id = as.numeric(ward_id)) |>
arrange(ward_id)
write.csv(cleaned_capital_data, "../data/analysis_data/cleaned_capital_data.csv")
write_parquet(cleaned_capital_data, "../data/analysis_data/cleaned_capital_data.parquet")
#| include: false
#| warning: false
#| message: false
# get package
url <- "https://ckan0.cf.opendata.inter.prod-toronto.ca/dataset/6678e1a6-d25f-4dff-b2b7-aa8f042bc2eb/resource/16a31e1d-b4d9-4cf0-b5b3-2e3937cb4121/download/2023-WardProfiles-2011-2021-CensusData.xlsx"
# load the first datastore resource as a sample
local_file <- tempfile(fileext = ".xlsx")
download.file(url, local_file, mode = "wb")
raw_ward_data <- readxl::read_xlsx(local_file)
# Write CSV
write.csv(raw_ward_data, "../data/raw_data/raw_ward_data.csv")
# clean up
unlink(local_file)
#| include: false
#| warning: false
#| message: false
raw_data_2 <- read_csv("../data/raw_data/raw_ward_data.csv")
# Only keep the relevant columns:
cleaned_ward_data <-
raw_data_2[c(18, 997, 1307, 1383), ]
cleaned_ward_data <- as.data.frame(t(cleaned_ward_data)) |>
slice(-1) |>
slice(-1) |>
rename(population = V1, income = V4)
# Remove the first row:
cleaned_ward_data <- cleaned_ward_data[-1, ]
# Add ward_id column:
cleaned_ward_data$ward_id = 1:25
# Set row name as ward_id
rownames(cleaned_ward_data) <- cleaned_ward_data$ward_id
ward_names <- c("Etobicoke North", "Etobicoke Centre", "Etobicoke-Lakeshore",
"Parkdale-High Park","York South-Weston", "York Centre",
"Humber River-Black Creek", "Eglinton-Lawrence",
"Davenport", "Spadina-Fort York", "University-Rosedale",
"Toronto-St. Paul's", "Toronto Centre", "Toronto-Danforth",
"Don Valley West", "Don Valley East", "Don Valley North",
"Willowdale", "Beaches-East York", "Scarborough Southwest",
"Scarborough Centre", "Scarborough-Agincourt",
"Scarborough North", "Scarborough-Guildwood",
"Scarborough-Rouge Park")
# Add ward name column:
cleaned_ward_data$ward = ward_names
# Calculate the percentage of uneducated people in each ward:
cleaned_ward_data <- cleaned_ward_data[c("ward_id", "ward", "population", "income")] |>
rename("average_household_income" = "income")
write.csv(cleaned_ward_data, "../data/analysis_data/cleaned_ward_data.csv")
write_parquet(cleaned_ward_data, "../data/analysis_data/cleaned_ward_data.parquet")
#| include: false
#| warning: false
#| message: false
# Captial Budgets in Toronto
url <- "https://ckan0.cf.opendata.inter.prod-toronto.ca/dataset/7d3bcf2f-8eca-4ed5-a352-a34adb130931/resource/50f76ab0-3ed3-41b4-8350-49c2c52911f9/download/2023-2032-capital-budget-and-plan-details.xlsx"
# load the first datastore resource as a sample
local_file <- tempfile(fileext = ".xlsx")
download.file(url, local_file, mode = "wb")
raw_capital_data <- readxl::read_xlsx(local_file)
# Write CSV
write.csv(raw_capital_data, "../data/raw_data/raw_capital_data.csv")
#| include: false
#| warning: false
#| message: false
raw_capital_data_2 <- read_csv("../data/raw_data/raw_capital_data.csv")
# Only keep the relevant columns with name Total 10 Year, Ward Number, Ward, Category
cleaned_capital_data <- raw_capital_data_2[c(15, 16, 17, 18)] |>
rename("ward_id" = "Ward Number") |>
rename("ward" = "Ward") |>
rename("category" = "Category") |>
rename("total_10_year" = "Total 10 Year")
# Filter out the rows in ward_id that are CW
cleaned_capital_data <- cleaned_capital_data %>%
filter(ward_id != "CW")
# Combine the rows with the same ward_id and category and sum the total_10_year keep the ward_name
cleaned_capital_data <- cleaned_capital_data |>
group_by(ward_id, ward, category) |>
summarise(total_10_year = sum(total_10_year)) |>
# change ward_id to numeric
mutate(ward_id = as.numeric(ward_id)) |>
arrange(ward_id)
write.csv(cleaned_capital_data, "../data/analysis_data/cleaned_capital_data.csv")
write_parquet(cleaned_capital_data, "../data/analysis_data/cleaned_capital_data.parquet")
cite(opendatatoronto)
cite("opendatatoronto")
citation("opendatatoronto")
citation("tidyverse")
citation("ggplot2")
citation("readxl")
citation("dplyr")
citation("stylr")
citation("styler")
